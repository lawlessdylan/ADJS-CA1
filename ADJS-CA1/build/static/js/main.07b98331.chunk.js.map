{"version":3,"sources":["components/News/Modal.js","components/News/NewSingle.js","components/News/Tech.js","components/News/Business.js","components/News/Home.js","components/Nav.js","components/App.js","serviceWorker.js","index.js"],"names":["ArticleModal","props","useState","show","setShow","handleClose","Button","className","onClick","Modal","onHide","aria-labelledby","centered","src","item","urlToImage","alt","title","Header","closeButton","Title","Body","description","Footer","variant","href","url","target","NewSingle","source","name","author","key","Tech","state","news","fetch","then","response","json","data","setState","articles","console","log","catch","error","this","map","renderItems","Component","Business","date","Home","term","MyNav","Navbar","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Item","to","React","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.07b98331.chunk.js","sourcesContent":["/**\n * @Author: dylanlawless\n * @Date:   2019-11-07T12:38:26+00:00\n * @Last modified by:   dylanlawless\n * @Last modified time: 2019-11-08T15:32:43+00:00\n */\n\n\n\nimport React, {useState} from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { Button } from 'react-bootstrap';\n\n\n function ArticleModal(props) {\n\n   const [show, setShow] = useState(false);\n\n   const handleClose = () => {\n\n     setShow(false);\n\n   };\n   const handleShow = () => {\n     setShow(true);\n\n\n};\n\n\n\n   return (\n     <div>\n       <Button className=\"modal-button\"  onClick={handleShow}>\n         Read more\n       </Button>\n       <Modal className=\"my-modal\" show={show} onHide={handleClose} aria-labelledby=\"contained-modal-title-vcenter\" centered>\n        <img className=\"modal-image img-responsive col-xs-12\" src={props.item.urlToImage} alt={props.item.title} />\n         <Modal.Header closeButton>\n         <Modal.Title>{props.item.title}</Modal.Title>\n\n\n\n         </Modal.Header>\n         <Modal.Body>\n            {props.item.description}\n         </Modal.Body>\n\n         <Modal.Footer>\n         <Button variant=\"outline-dark\" onClick={handleClose}>\n           Close\n         </Button>\n\n             <Button href={props.item.url} target=\"blank\"className=\"visit-button\" variant=\"primary\">\n               Visit full article\n             </Button>\n\n         </Modal.Footer>\n       </Modal>\n\n    </div>\n   );\n }\n\n export default ArticleModal;\n","/**\n * @Author: dylanlawless\n * @Date:   2019-10-21T09:50:35+01:00\n * @Last modified by:   dylanlawless\n * @Last modified time: 2019-11-08T15:31:44+00:00\n */\n\n\nimport React from 'react';\nimport ArticleModal from './Modal';\n\n\nconst NewSingle  = ({item}) => (\n\n    <div className=\"col-sm-12 col-md-6 col-lg-4 \">\n            <div className=\"card\">\n                <div className=\"card-image\">\n                        <img className=\"article-image img-responsive\" src={item.urlToImage} alt={item.title} />\n                        <div className=\"caption carousel-caption\">\n                            <span>{item.source.name}</span>\n                        </div>\n\n                </div>\n                <div className=\"card-body\">\n\n                    <div className=\"article-title\">\n                        <p>{item.title}</p>\n                    </div>\n                    <div className=\"small-details\">\n                        <p>{item.author} - {item.source.name}</p>\n                    </div>\n                    <hr />\n                    <div className=\"\">\n                        <ArticleModal key={item.url} item={item} />\n                    </div>\n\n                </div>\n          </div>\n\n        </div>\n\n);\n\n\nexport default NewSingle;\n","/**\n * @Author: dylanlawless\n * @Date:   2019-10-22T19:19:14+01:00\n * @Last modified by:   dylanlawless\n * @Last modified time: 2019-11-08T15:09:35+00:00\n */\n\nimport React, { Component } from 'react';\nimport NewSingle from './NewSingle';\n\n\nclass Tech extends Component{\n\n  constructor(props){\n      super(props);\n      this.state = {\n        news: [],\n      }\n  }\n\n  componentDidMount() {\n    const url = 'https://newsapi.org/v2/top-headlines?sources=techcrunch&apiKey=bdfcbd893d5843e3af83d4b06562157d';\n\n    fetch(url)\n      .then((response) => {\n          return response.json();\n      })\n      .then((data) => {\n          this.setState({\n            news: data.articles\n          })\n         console.log(data);\n      })\n      .catch((error) => console.log(error));\n  }\n\n  renderItems(){\n\n      return this.state.news.map((item) => {\n\n        if(item.urlToImage === null){\n            // console.log('Kk');\n              item.urlToImage = \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT_MF_p8s1Thjbsza52U28KF7tRFbUP-tzwSt0hQd8_Assq23jF\";\n        }\n        return (\n          <h2>Business</h2>,\n          <NewSingle key={item.url} item={item} />\n        )\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n      <div>\n          <h2 className=\"page-heading\">Tech</h2>\n          <hr />\n      </div>\n          <div className=\"row\">\n            {this.renderItems()}\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default Tech;\n","/**\n * @Author: dylanlawless\n * @Date:   2019-10-22T19:36:50+01:00\n * @Last modified by:   dylanlawless\n * @Last modified time: 2019-11-08T15:04:47+00:00\n */\n\n\n /**\n  * @Author: dylanlawless\n  * @Date:   2019-10-22T19:19:14+01:00\n * @Last modified by:   dylanlawless\n * @Last modified time: 2019-11-08T15:04:47+00:00\n  */\n\n import React, { Component } from 'react';\n import NewSingle from './NewSingle';\n\n\n class Business extends Component{\n\n   constructor(props){\n       super(props);\n       this.state = {\n         news: [],\n         date: ''\n       }\n   }\n\n   componentDidMount() {\n     const url = 'https://newsapi.org/v2/top-headlines?country=us&category=business&apiKey=bdfcbd893d5843e3af83d4b06562157d';\n\n     fetch(url)\n       .then((response) => {\n           return response.json();\n       })\n       .then((data) => {\n           this.setState({\n             news: data.articles\n           })\n           console.log(data);\n       })\n       .catch((error) => console.log(error));\n   }\n\n   renderItems(){\n\n       return this.state.news.map((item) => {\n         if(item.urlToImage === null){\n             // console.log('Kk');\n               item.urlToImage = \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT_MF_p8s1Thjbsza52U28KF7tRFbUP-tzwSt0hQd8_Assq23jF\";\n         }\n         return (\n\n           <NewSingle key={item.url} item={item} />\n         )\n       });\n   }\n\n   render() {\n     return (\n       <div className=\"container\">\n       <div>\n           <h2 className=\"page-heading\">Business</h2>\n           <hr />\n       </div>\n           <div className=\"row\">\n             {this.renderItems()}\n           </div>\n       </div>\n     );\n   }\n }\n\n export default Business;\n","/**\n * @Author: dylanlawless\n * @Date:   2019-10-21T09:44:33+01:00\n * @Last modified by:   dylanlawless\n * @Last modified time: 2019-11-08T15:27:20+00:00\n */\nimport React, { Component } from 'react';\nimport NewSingle from './NewSingle';\n\n\nclass Home extends Component{\n\n  constructor(props){\n      super(props);\n      this.state = {\n        news: [],\n        term: ''\n      }\n  }\n\n  componentDidMount() {\n\n    const url = 'https://newsapi.org/v2/everything?q=bitcoin&from=2019-10-22&sortBy=publishedAt&apiKey=bdfcbd893d5843e3af83d4b06562157d';\n    // const url = 'https://api.nytimes.com/svc/books/v3//lists/names.json?api-key=X3ZvWGAQ9uKeWFJgR5BBL2I8e5YAJ8Cg';\n\n    fetch(url)\n      .then((response) => {\n          return response.json();\n      })\n      .then((data) => {\n          this.setState({\n            news: data.articles\n          })\n          console.log(data);\n      })\n      .catch((error) => console.log(error));\n  }\n\n  renderItems(){\n\n      return this.state.news.map((item) => {\n\n        if(item.urlToImage === null){\n\n              item.urlToImage = \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcT_MF_p8s1Thjbsza52U28KF7tRFbUP-tzwSt0hQd8_Assq23jF\";\n        }\n\n        return (\n                <NewSingle key={item.url} item={item} />\n\n        )\n      });\n  }\n\n  render() {\n    return (\n\n          <div className=\"container\">\n          <div>\n              <h2 className=\"page-heading\">Most Recent</h2>\n              <hr />\n          </div>\n            <div className=\"row\">\n                {this.renderItems()}\n            </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Home;\n// return\n// <ArticleModal data={news} />\n","/**\n * @Author: dylanlawless\n * @Date:   2019-10-22T19:34:15+01:00\n * @Last modified by:   dylanlawless\n * @Last modified time: 2019-11-08T15:33:51+00:00\n */\nimport React from 'react';\nimport './App.css';\nimport { Link } from 'react-router-dom';\nimport Nav from 'react-bootstrap/Nav'\nimport { Navbar } from 'react-bootstrap';\n\n\n\nclass MyNav extends React.Component{\n\nrender(){\n    return(\n\n\n\n        <Navbar className=\"my-nav\" expand=\"lg\"  variant=\"dark\">\n        <Navbar.Brand>\n              <h3 className=\"nav-heading\">NEWS</h3>\n           </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto testtest\">\n              <Nav.Item className=\"navbar-large\">\n                  <Link to='/'>\n                        <div className=\"navbar-links\">MOST RECENT</div>\n                  </Link>\n              </Nav.Item>\n              <Nav.Item className=\"navbar-large\" >\n                  <Link to='/tech'>\n                        <div className=\"navbar-links\">TECH</div>\n                  </Link>\n              </Nav.Item>\n              <Nav.Item className=\"navbar-large\">\n                  <Link to='/business'>\n                     <div className=\"navbar-links\">BUSINESS</div>\n                  </Link>\n              </Nav.Item>\n           </Nav>\n         </Navbar.Collapse>\n\n        </Navbar>\n\n\n\n    );\n\n}\n\n\n}\n\nexport default MyNav;\n","/**\n * @Author: dylanlawless\n * @Date:   2019-10-21T09:31:29+01:00\n * @Last modified by:   dylanlawless\n * @Last modified time: 2019-11-07T14:25:09+00:00\n */\n import 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nimport React from 'react';\nimport './App.css';\nimport Tech from './News/Tech';\nimport Business from './News/Business';\nimport Home from './News/Home';\n\nimport MyNav from './Nav';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <Router>\n        <MyNav />\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/tech\" component={Tech} />\n            <Route path=\"/business\" component={Business} />\n          </Switch>\n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n * @Author: dylanlawless\n * @Date:   2019-10-21T09:31:29+01:00\n * @Last modified by:   dylanlawless\n * @Last modified time: 2019-10-21T09:42:37+01:00\n */\n\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}